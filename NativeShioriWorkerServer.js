// Generated by CoffeeScript 1.9.2
(function() {
  var NativeShioriWorkerServer;

  NativeShioriWorkerServer = (function() {
    function NativeShioriWorkerServer(shiori) {
      this.shiorihandler = new NativeShiori(shiori);
      this.worker_server = new WorkerServer({
        push: (function(_this) {
          return function(arg) {
            var directory, dirpath;
            dirpath = arg[0], directory = arg[1];
            return new Promise(function(resolve, reject) {
              return resolve({
                contents: _this.shiorihandler.push(dirpath, directory)
              });
            });
          };
        })(this),
        load: (function(_this) {
          return function(dirpath) {
            return new Promise(function(resolve, reject) {
              return resolve({
                contents: _this.shiorihandler.load(dirpath)
              });
            });
          };
        })(this),
        request: (function(_this) {
          return function(request) {
            return new Promise(function(resolve, reject) {
              return resolve({
                contents: _this.shiorihandler.request(request)
              });
            });
          };
        })(this),
        unload: (function(_this) {
          return function() {
            return new Promise(function(resolve, reject) {
              return resolve({
                contents: _this.shiorihandler.unload()
              });
            });
          };
        })(this),
        pull: (function(_this) {
          return function(dirpath) {
            return new Promise(function(resolve, reject) {
              var data, directory, path, transferable;
              directory = _this.shiorihandler.pull(dirpath);
              transferable = [];
              for (path in directory) {
                data = directory[path];
                transferable.push(data);
              }
              return resolve({
                contents: directory,
                transferable: transferable
              });
            });
          };
        })(this)
      });
    }

    return NativeShioriWorkerServer;

  })();

  this.NativeShioriWorkerServer = NativeShioriWorkerServer;

}).call(this);
